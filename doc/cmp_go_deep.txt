cmp_go_deep Options                                   *cmp_go_deep-options*
==============================================================================
DESCRIPTION                                                    *cmp_go_deep-description*

    This section describes the default options for the
    |cmp_go_deep| Go source that provides deep symbol
    completions for unimported packages.

=============================================================================
SETUP-nvim-cmp                                                 *cmp_go_deep-setup-nvim-cmp*
>lua
{
    "hrsh7th/nvim-cmp",
    dependencies = {
	{ "samiulsami/cmp-go-deep", dependencies = { "kkharji/sqlite.lua" } },
    },
    ...
    require("cmp").setup({
        sources = {{
            name = "go_deep",
	    keyword_length = 3,
	    max_item_count = 5,
            ---@module "cmp_go_deep"
	    ---@type cmp_go_deep.Options
            option = {
                -- See below for configuration options
            },
        }},
    })
}
<

==============================================================================
SETUP-blink.cmp                                               *cmp_go_deep-setup-blink*
>lua
{
	"saghen/blink.cmp",
	dependencies = {
		{ "samiulsami/cmp-go-deep", dependencies = { "kkharji/sqlite.lua" } },
		{ "saghen/blink.compat" },
	},
	opts = {
		sources = {
			default = {
				"go_deep",
			},
			providers = {
				go_deep = {
					name = "go_deep",
					module = "blink.compat.source",
					min_keyword_length = 3,
					max_items = 5,
					---@module "cmp_go_deep"
					---@type cmp_go_deep.Options
					opts = {
						-- See below for configuration options
					},
				},
			},
		},
	},
}
<

==============================================================================
DEFAULT OPTIONS                                                *cmp_go_deep-default-options*

    The following options can be configured:

    • `notifications`
        Enable/disable notifications.
        Default: `true`

    • `filetypes`
        Filetypes to enable the source for.
        Default: `{"go"}`

    • `get_documentation_implementation`
        How to get documentation for Go symbols.
        Options:
            "hover" - LSP 'textDocument/hover'. Prettier.
            "regex" - faster and simpler.
        Default: `"hover"`

    • `get_package_name_implementation`
        How to get the package names.
        Options:
            "treesitter" - accurate but slower.
            "regex" - faster but can fail in edge cases.
        Default: `"regex"`

    • `exclude_vendored_packages`
        Whether to exclude vendored packages from completions.
        Default: `false`

    • `documentation_wait_timeout_ms`
        Timeout in milliseconds for fetching documentation.
        Controls how long to wait for documentation to load.
        Default: `100` (0.5 seconds)

    • `debounce_gopls_requests_ms`
        Timeout in milliseconds for "locking-in" the current request and sending it to gopls.
        Default: `250`

    • `debounce_cache_requests_ms`
        Timeout in milliseconds for "locking-in" the current request and loading data from cache.
        Default: `50`

    • `db_path`
        Path to store the SQLite database.
        Default: `vim.fn.stdpath("data") .. "/cmp_go_deep.sqlite3"`

    • `db_size_limit_bytes`
        Maximum size for the SQLite database in bytes.
        Default: `200 * 1024 * 1024` (200MB)
==============================================================================

vim:tw=80:ts=4:ft=help:norl:
